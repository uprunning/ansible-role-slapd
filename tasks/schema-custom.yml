---
- name: "Check the {{ slapd_schema_custom }} schema was already exists"
  become: true
  community.general.ldap_search:
    dn: "cn=schema,cn=config"
    schema: true
    scope: "onelevel"
    filter: "(&(cn={*}{{ slapd_schema_custom }})(objectClass=olcSchemaConfig))"
  check_mode: false
  register: schema_custom
  when: slapd_schema_custom_dn is not defined

- name: Define slapd_schema_custom_dn
  set_fact:
    slapd_schema_custom_dn: >-
      {%- if schema_custom.results[0] is defined -%}
      {{ schema_custom.results[0].dn }}
      {%- else -%}
      cn={{ slapd_schema_custom }},cn=schema,cn=config
      {%- endif -%}
  when: slapd_schema_custom_dn is not defined

- name: 'Debug: Show slapd_schema_custom_dn'
  debug:
    msg: "{{ slapd_schema_custom_dn }}"
  tags:
    - never
    - debug

# Schema deleting was not possible: RESULT tag=107 err=53 SERVER UNWILLING TO PERFORM
# conn=1027 op=2 DEL dn="cn={4}esis,cn=schema,cn=config"
# conn=1027 op=2 RESULT tag=107 err=53 qtime=0.000014 etime=0.000040 text=
# - name: "Ensure the {{ slapd_schema_custom }} schema is deleted"
#   become: true
#   ldap_entry:
#     dn: "{{ slapd_schema_custom_dn }}"
#     objectClass: "olcSchemaConfig"
#     state: absent

# ldap_entry does not check existence of attributes as a result following error is thrown.
# 'Other (e.g., implementation specific) error', 'info': 'olcAttributeTypes: Duplicate attributeType: \"2.25.896523589646542388.1\"'}", "msg": "Entry action failed."}
- name: "Ensure the {{ slapd_schema_custom }} schema was registered"
  become: true
  ldap_entry:
    dn: "{{ slapd_schema_custom_dn }}"
    objectClass: "olcSchemaConfig"
    attributes:
      cn: "misc"
      olcAttributeTypes: "{{ slapd_schema_custom_attributetypes }}"
      olcObjectClasses: "{{ slapd_schema_custom_objectclasses }}"
  when: schema_custom.results[0] is not defined
